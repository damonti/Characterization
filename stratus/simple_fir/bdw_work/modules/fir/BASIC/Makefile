
##############################################################################
# Library Makefile generated by Behavioral Design Workbench Makefile Generator V1.0
# Cadence Design Systems
#  Library: <bdw_work/modules/fir/BASIC>
#  Library catalogue: <bdw_work/modules/fir/BASIC/stratus_hls.bdl>
##############################################################################

MAKE			   = make --no-print-directory $(firstword $(MAKEFILE_LIST))
PERL			   = perl
CYNTHVLG		   = ${STRATUS_HOME}/bin/stratus_vlg --output_style_starc=off

ifeq ($(BDW_DEBUG),1)
BDW_DEBUG_OPT              = -g
else
BDW_DEBUG_OPT              = 
endif

VLG_FLAGS          = -DBDW_RTL=1 
BDW_USECYNTH	   = 1
BDW_CCFLAGS        = $(BDW_DEBUG_OPT) -c -I. -I../../../../bdw_work/modules/fir/BASIC/c_parts -I../../../..

BDW_CDSLIB = cds.lib
BDW_HDLVAR = hdl.var

include ${STRATUS_HOME}/share/stratus/source/bdw.mak

BDW_fir_BASIC_SRCLIB = .
BDW_fir_BASIC_C_PARTS_A = objs/libfir_BASIC.a

#
# RTL Verilog models that must be built with stratus_vlg.
#

BDW_fir_BASIC_BUILD_RTL_V =
	
#
# Objects for RTL C++ simulation.
#

BDW_fir_BASIC_RTL_O = $(addprefix objs/,  \
	 fir_RAM_8X8_1.o fir_N_Mux_8_8_12_4.o fir_Xor_1Ux1U_1U_1.o fir_And_1Ux1U_1U_1.o \
	 fir_Not_1U_1U_1.o fir_Or_1Ux1U_1U_4.o fir_Mul_8Ux8U_11U_4.o fir_N_Muxb_1_2_11_4.o \
	 fir_Add_3Ux1U_4U_4.o fir_gen_busy_r_1.o fir_LessThan_1U_10_4.o fir_Add_3U_4_4.o \
	 fir_Add_11Ux11U_11U_4.o)
#
# Build RTL Verilog models with stratus_vlg
#

v_rtl/%.v : $(BDW_fir_BASIC_SRCLIB)/c_parts/%.cc
	@mkdir -p v_rtl 
	@$(BDW_CCDEP) -E -I$(BDW_fir_BASIC_SRCLIB)/c_parts $(BDW_CCFLAGS) -DBDW_RTL $< 2>&1 | cksum > v_rtl/$(<F).vcs.new
	@if [ -f $@ -a -f v_rtl/$(<F).vcs ] ; then \
		if diff v_rtl/$(<F).vcs v_rtl/$(<F).vcs.new 2>&1 > /dev/null ; then \
			touch $@; \
		else \
			echo $(CYNTHVLG) -I. -I../../../../bdw_work/modules/fir/BASIC/c_parts -I../../../.. $(VLG_FLAGS) -o $@ $< ; \
			$(CYNTHVLG) -I. -I../../../../bdw_work/modules/fir/BASIC/c_parts -I../../../.. $(VLG_FLAGS) -o $@ $< ; \
		fi; \
	else \
		echo $(CYNTHVLG) -I. -I../../../../bdw_work/modules/fir/BASIC/c_parts -I../../../.. $(VLG_FLAGS) -o $@ $< ; \
		$(CYNTHVLG) -I. -I../../../../bdw_work/modules/fir/BASIC/c_parts -I../../../.. $(VLG_FLAGS) -o $@ $< ; \
	fi
	@rm -f v_rtl/$(<F).vcs
	@mv v_rtl/$(<F).vcs.new v_rtl/$(<F).vcs


#
# The 'prep' target is used to prepare the archive library for C++ RTL simulation
# and any RTL Verilog models that are not a part of the source library.
#
prep: prep_vlog prep_c

#
# The 'prep_c' target is used to prepare the archive library for RTL
# C++ simulation.
#
prep_c: obj_dir 
	+make $(BDW_fir_BASIC_C_PARTS_A)

#
# The 'prep_vlog' target is used to prepare the archive library for RTL
# Verilog simulation.
#

prep_vlog: $(BDW_fir_BASIC_BUILD_RTL_V)
	
	


	@if [ ! -h v_rtl ] ; then mkdir -p v_rtl ; fi


#
# Build archive library for BEH and RTL C++ simulation.
#
$(BDW_fir_BASIC_C_PARTS_A) : $(BDW_fir_BASIC_RTL_O)
	@rm -f $@
	$(BDW_AR) $@ $^ 


#
# Build models for RTL BEH and C++ simulation.
#

objs/%.o : $(BDW_fir_BASIC_SRCLIB)/c_parts/%.cc
	@$(BDW_CCDEP) -E -I$(BDW_fir_BASIC_SRCLIB)/c_parts $(BDW_CCFLAGS) -DBDW_RTL=1 -DBDW_HUB $< 2>&1 | cksum > objs/$(<F).ocs.new
	@if [ -f $@ -a -f objs/$(<F).ocs ] ; then \
		if diff objs/$(<F).ocs objs/$(<F).ocs.new 2>&1 > /dev/null ; then \
			touch $@; \
		else \
			echo $(BDW_CC)  -I$(BDW_fir_BASIC_SRCLIB)/c_parts $(BDW_CCFLAGS) -DBDW_RTL=1 -DBDW_HUB  -o $@  $< ; \
			$(BDW_CC)  -I$(BDW_fir_BASIC_SRCLIB)/c_parts $(BDW_CCFLAGS) -DBDW_RTL=1 -DBDW_HUB  -o $@  $< ; \
		fi; \
	else \
		echo $(BDW_CC)  -I$(BDW_fir_BASIC_SRCLIB)/c_parts $(BDW_CCFLAGS) -DBDW_RTL=1 -DBDW_HUB  -o $@  $< ; \
		$(BDW_CC)  -I$(BDW_fir_BASIC_SRCLIB)/c_parts $(BDW_CCFLAGS) -DBDW_RTL=1 -DBDW_HUB  -o $@  $< ; \
	fi
	@rm -f objs/$(<F).ocs
	@mv objs/$(<F).ocs.new objs/$(<F).ocs



obj_dir:
	@echo "DEFINE fir_BASIC_worklib INCA_libs/fir_BASIC_worklib" > $(BDW_CDSLIB)
	@echo "DEFINE WORK fir_BASIC_worklib" > $(BDW_HDLVAR)
	@mkdir -p INCA_libs/fir_BASIC_worklib
	@if [ ! -d objs ] ; then mkdir objs ; fi
	
always:


